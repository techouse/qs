[{"name":"qs_dart","qualifiedName":"qs_dart","href":"qs_dart/","kind":9,"packageRank":0,"desc":"A faithful, cross‑port implementation of Node.js qs for Dart."},{"name":"DateSerializer","qualifiedName":"qs_dart.DateSerializer","href":"qs_dart/DateSerializer.html","kind":21,"packageRank":0,"desc":"Hook to stringify a DateTime before it goes through the Encoder.\nReturn a plain, unencoded string; the encoder will percent‑encode it.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"DecodeKind","qualifiedName":"qs_dart.DecodeKind","href":"qs_dart/DecodeKind.html","kind":5,"packageRank":0,"desc":"Decoding context used by the query string parser and utilities.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"values","qualifiedName":"qs_dart.DecodeKind.values","href":"qs_dart/DecodeKind/values-constant.html","kind":1,"overriddenDepth":0,"packageRank":0,"desc":"A constant List of the values in this enum, in order of their declaration.","enclosedBy":{"name":"DecodeKind","kind":5,"href":"qs_dart/DecodeKind.html"}},{"name":"DecodeOptions","qualifiedName":"qs_dart.DecodeOptions","href":"qs_dart/DecodeOptions-class.html","kind":3,"packageRank":0,"desc":"Options that configure the output of QS.decode.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"DecodeOptions.new","qualifiedName":"qs_dart.DecodeOptions.DecodeOptions.new","href":"qs_dart/DecodeOptions/DecodeOptions.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"allowDots","qualifiedName":"qs_dart.DecodeOptions.allowDots","href":"qs_dart/DecodeOptions/allowDots.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"When true, decode dot notation in keys: a.b=c → {a: {b: \"c\"}}.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"allowEmptyLists","qualifiedName":"qs_dart.DecodeOptions.allowEmptyLists","href":"qs_dart/DecodeOptions/allowEmptyLists.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"When true, allow empty list values to be produced from inputs like\na[]= without coercing or discarding them.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"charset","qualifiedName":"qs_dart.DecodeOptions.charset","href":"qs_dart/DecodeOptions/charset.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Character encoding used to decode percent‑encoded bytes in the input.\nOnly utf8 and latin1 are supported.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"charsetSentinel","qualifiedName":"qs_dart.DecodeOptions.charsetSentinel","href":"qs_dart/DecodeOptions/charsetSentinel.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Enable opt‑in charset detection via a utf8=✓ sentinel parameter.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"comma","qualifiedName":"qs_dart.DecodeOptions.comma","href":"qs_dart/DecodeOptions/comma.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Parse the entire input as a comma‑separated value instead of key/value\npairs. Nested maps (e.g., a={b:1},{c:d}) are not supported in this\nmode.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"copyWith","qualifiedName":"qs_dart.DecodeOptions.copyWith","href":"qs_dart/DecodeOptions/copyWith.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Return a new DecodeOptions with the provided overrides.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"decode","qualifiedName":"qs_dart.DecodeOptions.decode","href":"qs_dart/DecodeOptions/decode.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Unified scalar decode with key/value context.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"decodeDotInKeys","qualifiedName":"qs_dart.DecodeOptions.decodeDotInKeys","href":"qs_dart/DecodeOptions/decodeDotInKeys.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Decode dots that appear in keys (e.g., a.b=c).","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"decodeKey","qualifiedName":"qs_dart.DecodeOptions.decodeKey","href":"qs_dart/DecodeOptions/decodeKey.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Convenience: decode a key and coerce the result to String (or null).","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"decodeValue","qualifiedName":"qs_dart.DecodeOptions.decodeValue","href":"qs_dart/DecodeOptions/decodeValue.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Convenience: decode a value token.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"decoder","qualifiedName":"qs_dart.DecodeOptions.decoder","href":"qs_dart/DecodeOptions/decoder.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Deprecated: use decode. This wrapper will be removed in a future release.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"delimiter","qualifiedName":"qs_dart.DecodeOptions.delimiter","href":"qs_dart/DecodeOptions/delimiter.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Delimiter used to split key/value pairs. May be a String (e.g., \"&amp;\")\nor a RegExp for pattern‑based splitting.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"depth","qualifiedName":"qs_dart.DecodeOptions.depth","href":"qs_dart/DecodeOptions/depth.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Maximum nesting depth when constructing maps from bracket notation.\nThe default (5) is a protective limit against abuse; raise it only when\nyou control the inputs.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"duplicates","qualifiedName":"qs_dart.DecodeOptions.duplicates","href":"qs_dart/DecodeOptions/duplicates.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Strategy to apply when the same key appears multiple times.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"ignoreQueryPrefix","qualifiedName":"qs_dart.DecodeOptions.ignoreQueryPrefix","href":"qs_dart/DecodeOptions/ignoreQueryPrefix.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Ignore a leading ? query prefix if present.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"interpretNumericEntities","qualifiedName":"qs_dart.DecodeOptions.interpretNumericEntities","href":"qs_dart/DecodeOptions/interpretNumericEntities.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Interpret HTML numeric entities like &amp;#...; in tokens before decoding.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"listLimit","qualifiedName":"qs_dart.DecodeOptions.listLimit","href":"qs_dart/DecodeOptions/listLimit.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Maximum list index that will be honored when decoding bracket indices.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"parameterLimit","qualifiedName":"qs_dart.DecodeOptions.parameterLimit","href":"qs_dart/DecodeOptions/parameterLimit.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Maximum number of parameters to parse before applying limits.\nDefaults to 1000 to guard against excessively long inputs.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"parseLists","qualifiedName":"qs_dart.DecodeOptions.parseLists","href":"qs_dart/DecodeOptions/parseLists.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Disable list parsing entirely when false (treat bracket indices as\nstring keys).","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"props","qualifiedName":"qs_dart.DecodeOptions.props","href":"qs_dart/DecodeOptions/props.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The list of properties that will be used to determine whether\ntwo instances are equal.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"strictDepth","qualifiedName":"qs_dart.DecodeOptions.strictDepth","href":"qs_dart/DecodeOptions/strictDepth.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"When true, exceeding depth results in a thrown error instead of a\nsoft limit.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"strictNullHandling","qualifiedName":"qs_dart.DecodeOptions.strictNullHandling","href":"qs_dart/DecodeOptions/strictNullHandling.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"When true, tokens without an = (e.g., ?flag) decode to null\nrather than \"\".","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"throwOnLimitExceeded","qualifiedName":"qs_dart.DecodeOptions.throwOnLimitExceeded","href":"qs_dart/DecodeOptions/throwOnLimitExceeded.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"When true, exceeding limits throws instead of applying a soft cap.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"toString","qualifiedName":"qs_dart.DecodeOptions.toString","href":"qs_dart/DecodeOptions/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"DecodeOptions","kind":3,"href":"qs_dart/DecodeOptions-class.html"}},{"name":"Decoder","qualifiedName":"qs_dart.Decoder","href":"qs_dart/Decoder.html","kind":21,"packageRank":0,"desc":"Decoding options for QS.decode.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"Duplicates","qualifiedName":"qs_dart.Duplicates","href":"qs_dart/Duplicates.html","kind":5,"packageRank":0,"desc":"Strategy to resolve repeated keys when decoding a query string.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"toString","qualifiedName":"qs_dart.Duplicates.toString","href":"qs_dart/Duplicates/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Duplicates","kind":5,"href":"qs_dart/Duplicates.html"}},{"name":"values","qualifiedName":"qs_dart.Duplicates.values","href":"qs_dart/Duplicates/values-constant.html","kind":1,"overriddenDepth":0,"packageRank":0,"desc":"A constant List of the values in this enum, in order of their declaration.","enclosedBy":{"name":"Duplicates","kind":5,"href":"qs_dart/Duplicates.html"}},{"name":"EncodeOptions","qualifiedName":"qs_dart.EncodeOptions","href":"qs_dart/EncodeOptions-class.html","kind":3,"packageRank":0,"desc":"Options that configure the output of QS.encode.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"EncodeOptions.new","qualifiedName":"qs_dart.EncodeOptions.EncodeOptions.new","href":"qs_dart/EncodeOptions/EncodeOptions.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"addQueryPrefix","qualifiedName":"qs_dart.EncodeOptions.addQueryPrefix","href":"qs_dart/EncodeOptions/addQueryPrefix.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to true to add a question mark ? prefix to the encoded output.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"allowDots","qualifiedName":"qs_dart.EncodeOptions.allowDots","href":"qs_dart/EncodeOptions/allowDots.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to true to use dot Map notation in the encoded output.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"allowEmptyLists","qualifiedName":"qs_dart.EncodeOptions.allowEmptyLists","href":"qs_dart/EncodeOptions/allowEmptyLists.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to true to allow empty Lists in the encoded output.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"charset","qualifiedName":"qs_dart.EncodeOptions.charset","href":"qs_dart/EncodeOptions/charset.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The character encoding to use.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"charsetSentinel","qualifiedName":"qs_dart.EncodeOptions.charsetSentinel","href":"qs_dart/EncodeOptions/charsetSentinel.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to true to announce the character by including an utf8=✓ parameter\nwith the proper encoding of the checkmark, similar to what Ruby on Rails\nand others do when submitting forms.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"commaRoundTrip","qualifiedName":"qs_dart.EncodeOptions.commaRoundTrip","href":"qs_dart/EncodeOptions/commaRoundTrip.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"When listFormat is set to ListFormat.comma, you can also set\ncommaRoundTrip option to true or false, to append [] on\nsingle-item Lists, so that they can round trip through a parse.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"copyWith","qualifiedName":"qs_dart.EncodeOptions.copyWith","href":"qs_dart/EncodeOptions/copyWith.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a new EncodeOptions instance with updated values.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"delimiter","qualifiedName":"qs_dart.EncodeOptions.delimiter","href":"qs_dart/EncodeOptions/delimiter.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The delimiter to use when joining key-value pairs in the encoded output.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"encode","qualifiedName":"qs_dart.EncodeOptions.encode","href":"qs_dart/EncodeOptions/encode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to false to disable encoding.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"encodeDotInKeys","qualifiedName":"qs_dart.EncodeOptions.encodeDotInKeys","href":"qs_dart/EncodeOptions/encodeDotInKeys.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Encode Map keys using dot notation by setting encodeDotInKeys to true:","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"encodeValuesOnly","qualifiedName":"qs_dart.EncodeOptions.encodeValuesOnly","href":"qs_dart/EncodeOptions/encodeValuesOnly.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Encoding can be disabled for keys by setting the encodeValuesOnly to true","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"encoder","qualifiedName":"qs_dart.EncodeOptions.encoder","href":"qs_dart/EncodeOptions/encoder.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Encodes a value to a String.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"filter","qualifiedName":"qs_dart.EncodeOptions.filter","href":"qs_dart/EncodeOptions/filter.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Use the filter option to restrict which keys will be included in the encoded output.\nIf you pass a Function, it will be called for each key to obtain the replacement value.\nIf you pass a List, it will be used to select properties and List indices to be encoded.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"format","qualifiedName":"qs_dart.EncodeOptions.format","href":"qs_dart/EncodeOptions/format.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The encoding format to use.\nThe default format is Format.rfc3986 which encodes ' ' to %20\nwhich is backward compatible.\nYou can also set format to Format.rfc1738 which encodes ' ' to +.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"formatter","qualifiedName":"qs_dart.EncodeOptions.formatter","href":"qs_dart/EncodeOptions/formatter.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Convenience getter for accessing the format's Format.formatter","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"listFormat","qualifiedName":"qs_dart.EncodeOptions.listFormat","href":"qs_dart/EncodeOptions/listFormat.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The List encoding format to use.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"props","qualifiedName":"qs_dart.EncodeOptions.props","href":"qs_dart/EncodeOptions/props.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The list of properties that will be used to determine whether\ntwo instances are equal.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"serializeDate","qualifiedName":"qs_dart.EncodeOptions.serializeDate","href":"qs_dart/EncodeOptions/serializeDate.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Serializes a DateTime instance to a String.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"skipNulls","qualifiedName":"qs_dart.EncodeOptions.skipNulls","href":"qs_dart/EncodeOptions/skipNulls.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to true to completely skip encoding keys with null values","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"sort","qualifiedName":"qs_dart.EncodeOptions.sort","href":"qs_dart/EncodeOptions/sort.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set a Sorter to affect the order of parameter keys.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"strictNullHandling","qualifiedName":"qs_dart.EncodeOptions.strictNullHandling","href":"qs_dart/EncodeOptions/strictNullHandling.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Set to true to distinguish between null values and empty Strings.\nThis way the encoded string null values will have no = sign.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"toString","qualifiedName":"qs_dart.EncodeOptions.toString","href":"qs_dart/EncodeOptions/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"EncodeOptions","kind":3,"href":"qs_dart/EncodeOptions-class.html"}},{"name":"Encoder","qualifiedName":"qs_dart.Encoder","href":"qs_dart/Encoder.html","kind":21,"packageRank":0,"desc":"Encoders, sorters, and the immutable EncodeOptions used by qs_dart.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"Format","qualifiedName":"qs_dart.Format","href":"qs_dart/Format.html","kind":5,"packageRank":0,"desc":"Output formatting strategies applied after RFC 3986 percent-encoding.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"formatter","qualifiedName":"qs_dart.Format.formatter","href":"qs_dart/Format/formatter.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The normalization function applied to each percent-encoded token.","enclosedBy":{"name":"Format","kind":5,"href":"qs_dart/Format.html"}},{"name":"toString","qualifiedName":"qs_dart.Format.toString","href":"qs_dart/Format/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns the case name (\"rfc1738\" / \"rfc3986\"), handy for logging.","enclosedBy":{"name":"Format","kind":5,"href":"qs_dart/Format.html"}},{"name":"values","qualifiedName":"qs_dart.Format.values","href":"qs_dart/Format/values-constant.html","kind":1,"overriddenDepth":0,"packageRank":0,"desc":"A constant List of the values in this enum, in order of their declaration.","enclosedBy":{"name":"Format","kind":5,"href":"qs_dart/Format.html"}},{"name":"Formatter","qualifiedName":"qs_dart.Formatter","href":"qs_dart/Formatter.html","kind":21,"packageRank":0,"desc":"Signature for a post–percent-encoding formatter that normalizes a single\nURI component string.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"LegacyDecoder","qualifiedName":"qs_dart.LegacyDecoder","href":"qs_dart/LegacyDecoder.html","kind":21,"packageRank":0,"desc":"Back‑compat adapter for (value, charset) -&gt; Any? decoders.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"ListFormat","qualifiedName":"qs_dart.ListFormat","href":"qs_dart/ListFormat.html","kind":5,"packageRank":0,"desc":"Shapes how list/array keys are written during query-string encoding.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"generator","qualifiedName":"qs_dart.ListFormat.generator","href":"qs_dart/ListFormat/generator.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns a function that transforms a container prefix (e.g. \"foo\")\nand an optional element key into the key path for a single list item.","enclosedBy":{"name":"ListFormat","kind":5,"href":"qs_dart/ListFormat.html"}},{"name":"toString","qualifiedName":"qs_dart.ListFormat.toString","href":"qs_dart/ListFormat/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"ListFormat","kind":5,"href":"qs_dart/ListFormat.html"}},{"name":"values","qualifiedName":"qs_dart.ListFormat.values","href":"qs_dart/ListFormat/values-constant.html","kind":1,"overriddenDepth":0,"packageRank":0,"desc":"A constant List of the values in this enum, in order of their declaration.","enclosedBy":{"name":"ListFormat","kind":5,"href":"qs_dart/ListFormat.html"}},{"name":"ListFormatGenerator","qualifiedName":"qs_dart.ListFormatGenerator","href":"qs_dart/ListFormatGenerator.html","kind":21,"packageRank":0,"desc":"Signature used by ListFormat to construct the key path for a single\nelement in a list during encoding.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"QS","qualifiedName":"qs_dart.QS","href":"qs_dart/QS-class.html","kind":3,"packageRank":0,"desc":"QS (Dart)","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"QS.new","qualifiedName":"qs_dart.QS.QS.new","href":"qs_dart/QS/QS.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"QS","kind":3,"href":"qs_dart/QS-class.html"}},{"name":"decode","qualifiedName":"qs_dart.QS.decode","href":"qs_dart/QS/decode.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Decode a query string or a pre-parsed map into a structured map.","enclosedBy":{"name":"QS","kind":3,"href":"qs_dart/QS-class.html"}},{"name":"encode","qualifiedName":"qs_dart.QS.encode","href":"qs_dart/QS/encode.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Encode a map/iterable into a query string.","enclosedBy":{"name":"QS","kind":3,"href":"qs_dart/QS-class.html"}},{"name":"Sentinel","qualifiedName":"qs_dart.Sentinel","href":"qs_dart/Sentinel.html","kind":5,"packageRank":0,"desc":"Sentinels for signalling the character set of form/query submissions.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"encoded","qualifiedName":"qs_dart.Sentinel.encoded","href":"qs_dart/Sentinel/encoded.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Fully encoded query fragment to append, including the utf8= key.","enclosedBy":{"name":"Sentinel","kind":5,"href":"qs_dart/Sentinel.html"}},{"name":"toString","qualifiedName":"qs_dart.Sentinel.toString","href":"qs_dart/Sentinel/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns the encoded query fragment (same as encoded).","enclosedBy":{"name":"Sentinel","kind":5,"href":"qs_dart/Sentinel.html"}},{"name":"value","qualifiedName":"qs_dart.Sentinel.value","href":"qs_dart/Sentinel/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Unencoded form control value (as it would appear in the page/DOM).","enclosedBy":{"name":"Sentinel","kind":5,"href":"qs_dart/Sentinel.html"}},{"name":"values","qualifiedName":"qs_dart.Sentinel.values","href":"qs_dart/Sentinel/values-constant.html","kind":1,"overriddenDepth":0,"packageRank":0,"desc":"A constant List of the values in this enum, in order of their declaration.","enclosedBy":{"name":"Sentinel","kind":5,"href":"qs_dart/Sentinel.html"}},{"name":"Sorter","qualifiedName":"qs_dart.Sorter","href":"qs_dart/Sorter.html","kind":21,"packageRank":0,"desc":"3‑way comparator to impose a deterministic order on keys (‑1/0/+1).\nReturning values outside that set will be signum‑clamped by callers.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"Undefined","qualifiedName":"qs_dart.Undefined","href":"qs_dart/Undefined-class.html","kind":3,"packageRank":0,"desc":"Sentinel used to distinguish between a missing value and an explicit null.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"Undefined.new","qualifiedName":"qs_dart.Undefined.Undefined.new","href":"qs_dart/Undefined/Undefined.html","kind":2,"packageRank":0,"desc":"Creates a new sentinel instance. All instances are equal.","enclosedBy":{"name":"Undefined","kind":3,"href":"qs_dart/Undefined-class.html"}},{"name":"copyWith","qualifiedName":"qs_dart.Undefined.copyWith","href":"qs_dart/Undefined/copyWith.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"No-op copy that returns another equal sentinel. Kept for API symmetry.","enclosedBy":{"name":"Undefined","kind":3,"href":"qs_dart/Undefined-class.html"}},{"name":"props","qualifiedName":"qs_dart.Undefined.props","href":"qs_dart/Undefined/props.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"No distinguishing fields — all Undefined instances are equal.","enclosedBy":{"name":"Undefined","kind":3,"href":"qs_dart/Undefined-class.html"}},{"name":"UriExtension","qualifiedName":"qs_dart.UriExtension","href":"qs_dart/UriExtension.html","kind":6,"packageRank":0,"desc":"Extensions that integrate qs_dart with Uri.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"queryParametersQs","qualifiedName":"qs_dart.UriExtension.queryParametersQs","href":"qs_dart/UriExtension/queryParametersQs.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Decodes the raw query string into a Map&lt;String, dynamic&gt; using QS.decode.","enclosedBy":{"name":"UriExtension","kind":6,"href":"qs_dart/UriExtension.html"}},{"name":"toStringQs","qualifiedName":"qs_dart.UriExtension.toStringQs","href":"qs_dart/UriExtension/toStringQs.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a normalized string for this Uri with the query encoded by QS.encode.","enclosedBy":{"name":"UriExtension","kind":6,"href":"qs_dart/UriExtension.html"}},{"name":"decode","qualifiedName":"qs_dart.decode","href":"qs_dart/decode.html","kind":8,"packageRank":0,"desc":"Top-level convenience functions that mirror the JavaScript qs API.","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}},{"name":"encode","qualifiedName":"qs_dart.encode","href":"qs_dart/encode.html","kind":8,"packageRank":0,"desc":"Encode a Dart object into a query string (convenience for QS.encode).","enclosedBy":{"name":"qs_dart","kind":9,"href":"qs_dart/"}}]
